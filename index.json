{
  "api/Crowdin.Xamarin.Forms.DynamicResourcesLoader.html": {
    "href": "api/Crowdin.Xamarin.Forms.DynamicResourcesLoader.html",
    "title": "Class DynamicResourcesLoader | Docs",
    "keywords": "Class DynamicResourcesLoader Inheritance Object DynamicResourcesLoader Namespace : Crowdin.Xamarin.Forms Assembly : Crowdin.Xamarin.Forms.dll Syntax public static class DynamicResourcesLoader : object Properties | Improve this Doc View Source CurrentCulture Declaration public static CultureInfo CurrentCulture { get; set; } Property Value Type Description CultureInfo | Improve this Doc View Source GlobalOptions Declaration public static CrowdinOptions GlobalOptions { get; set; } Property Value Type Description CrowdinOptions Methods | Improve this Doc View Source LoadCrowdinStrings(CrowdinOptions, ResourceDictionary) Declaration public static async Task LoadCrowdinStrings(CrowdinOptions options, ResourceDictionary destinationResources) Parameters Type Name Description CrowdinOptions options ResourceDictionary destinationResources Returns Type Description Task | Improve this Doc View Source LoadCrowdinStrings(String, ResourceDictionary) Declaration public static Task LoadCrowdinStrings(string filename, ResourceDictionary destinationResources) Parameters Type Name Description String filename ResourceDictionary destinationResources Returns Type Description Task | Improve this Doc View Source LoadStaticStrings(ResourceManager, ResourceDictionary) Declaration public static void LoadStaticStrings(ResourceManager resourceManager, ResourceDictionary dictionary) Parameters Type Name Description ResourceManager resourceManager ResourceDictionary dictionary"
  },
  "api/Crowdin.Xamarin.Forms.html": {
    "href": "api/Crowdin.Xamarin.Forms.html",
    "title": "Namespace Crowdin.Xamarin.Forms | Docs",
    "keywords": "Namespace Crowdin.Xamarin.Forms Classes DynamicResourcesLoader СrowdinClient"
  },
  "api/Crowdin.Xamarin.Forms.Models.CrowdinOptions.html": {
    "href": "api/Crowdin.Xamarin.Forms.Models.CrowdinOptions.html",
    "title": "Class CrowdinOptions | Docs",
    "keywords": "Class CrowdinOptions Inheritance Object CrowdinOptions Namespace : Crowdin.Xamarin.Forms.Models Assembly : Crowdin.Xamarin.Forms.dll Syntax public class CrowdinOptions : ICloneable Properties | Improve this Doc View Source DistributionHash Declaration public string DistributionHash { get; set; } Property Value Type Description String | Improve this Doc View Source FileName Declaration public string FileName { get; set; } Property Value Type Description String | Improve this Doc View Source NetworkPolicy Declaration public NetworkPolicy NetworkPolicy { get; set; } Property Value Type Description NetworkPolicy | Improve this Doc View Source UseCache Declaration public bool UseCache { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object"
  },
  "api/Crowdin.Xamarin.Forms.Models.DistributionManifest.html": {
    "href": "api/Crowdin.Xamarin.Forms.Models.DistributionManifest.html",
    "title": "Class DistributionManifest | Docs",
    "keywords": "Class DistributionManifest Inheritance Object DistributionManifest Namespace : Crowdin.Xamarin.Forms.Models Assembly : Crowdin.Xamarin.Forms.dll Syntax public class DistributionManifest : object Properties | Improve this Doc View Source Files Declaration public string[] Files { get; set; } Property Value Type Description String [] | Improve this Doc View Source Languages Declaration public string[] Languages { get; set; } Property Value Type Description String [] | Improve this Doc View Source Timestamp Declaration public DateTimeOffset Timestamp { get; set; } Property Value Type Description DateTimeOffset"
  },
  "api/Crowdin.Xamarin.Forms.Models.html": {
    "href": "api/Crowdin.Xamarin.Forms.Models.html",
    "title": "Namespace Crowdin.Xamarin.Forms.Models | Docs",
    "keywords": "Namespace Crowdin.Xamarin.Forms.Models Classes CrowdinOptions DistributionManifest Enums NetworkPolicy"
  },
  "api/Crowdin.Xamarin.Forms.Models.NetworkPolicy.html": {
    "href": "api/Crowdin.Xamarin.Forms.Models.NetworkPolicy.html",
    "title": "Enum NetworkPolicy | Docs",
    "keywords": "Enum NetworkPolicy Namespace : Crowdin.Xamarin.Forms.Models Assembly : Crowdin.Xamarin.Forms.dll Syntax public enum NetworkPolicy : int Fields Name Description All Forbidden OnlyCellular OnlyWiFi"
  },
  "api/Crowdin.Xamarin.Forms.СrowdinClient.html": {
    "href": "api/Crowdin.Xamarin.Forms.СrowdinClient.html",
    "title": "Class СrowdinClient | Docs",
    "keywords": "Class СrowdinClient Inheritance Object СrowdinClient Namespace : Crowdin.Xamarin.Forms Assembly : Crowdin.Xamarin.Forms.dll Syntax public static class СrowdinClient : object Properties | Improve this Doc View Source IsInitialized Declaration public static bool IsInitialized { get; } Property Value Type Description Boolean | Improve this Doc View Source Manifest Declaration public static DistributionManifest Manifest { get; } Property Value Type Description DistributionManifest Methods | Improve this Doc View Source GetFileTranslations(String, String) Declaration public static async Task<IDictionary<string, string>> GetFileTranslations(string inFilename, string languageCode) Parameters Type Name Description String inFilename String languageCode Returns Type Description Task < IDictionary < String , String >> | Improve this Doc View Source Init(String) Declaration public static async Task Init(string distributionHash) Parameters Type Name Description String distributionHash Returns Type Description Task"
  },
  "CODE_OF_CONDUCT.html": {
    "href": "CODE_OF_CONDUCT.html",
    "title": "Contributor Covenant Code of Conduct | Docs",
    "keywords": "Contributor Covenant Code of Conduct Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community. Our Standards Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Enforcement Responsibilities Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate. Scope This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at support@crowdin.com. All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident. Enforcement Guidelines Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct: 1. Correction Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested. 2. Warning Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban. 3. Temporary Ban Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban. 4. Permanent Ban Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the community. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html . Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder . For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq . Translations are available at https://www.contributor-covenant.org/translations ."
  },
  "CONTRIBUTING.html": {
    "href": "CONTRIBUTING.html",
    "title": "Contributing | Docs",
    "keywords": "Contributing 🎉 First off, thanks for taking the time to contribute! 🎉 The following is a set of guidelines for contributing to Crowdin Xamarin Forms SDK. These are mostly guidelines, not rules. Use your best judgment, and feel free to propose changes to this document in a pull request. This project and everyone participating in it are governed by the Code of Conduct . By participating, you are expected to uphold this code. How can I contribute? Star this repo It's quick and goes a long way! 🌠 Reporting Bugs This section guides you through submitting a bug report for Crowdin Xamarin Forms SDK. Following these guidelines helps maintainers, and the community understand your report 📝, reproduce the behavior 💻, and find related reports 🔎. When you are creating a bug report, please include as many details as possible. How Do I Submit a Bug Report? Bugs are tracked as GitHub issues . Explain the problem and include additional details to help reproduce the problem: Use a clear and descriptive title for the issue to identify the problem. Describe the exact steps which reproduce the problem in as many details as possible. Don't just say what you did, but explain how you did it. Describe the behavior you observed after following the steps and point out what exactly is the problem with that behavior. Explain which behavior you expected to see instead and why. Include details about your environment. Suggesting Enhancements This section guides you through submitting an enhancement suggestion for Crowdin Xamarin Forms SDK. Following these guidelines helps maintainers and the community understand your suggestion 📝 and find related suggestions 🔎. When you are creating an enhancement suggestion, please include as many details as possible. How Do I Submit an Enhancement Suggestion? Enhancement suggestions are tracked as GitHub issues . Create an issue on that repository and provide the following information: Use a clear and descriptive title for the issue to identify the suggestion. Provide a step-by-step description of the suggested enhancement in as many details as possible. Describe the current behavior and explain which behavior you expected to see instead and why. Explain why this enhancement would be useful to most Xamarin Forms SDK users. Also, we’re using Discussions as a place to connect with other members of our community. We hope that you: Ask questions you’re wondering about. Share ideas. Engage with other community members. Welcome others and are open-minded. Remember that this is a community we build together 💪. Your First Code Contribution Unsure where to begin contributing to Crowdin Xamarin Forms SDK? You can start by looking through these good-first-issue and help-wanted issues: Good first issue - issues which should only require a small amount of code, and a test or two. Help wanted - issues which should be a bit more involved than Good first issue issues. If you didn't find the corresponding issue and still want to contribute, please create an issue to discuss and then go ahead to create a pull request. Pull Request Checklist Before sending your pull requests, make sure you followed the list below: Read these guidelines. Read Code of Conduct . Ensure that your code adheres to standard conventions, as used in the rest of the project. Ensure that there are unit tests for your code. Run unit tests. Philosophy of code contribution Include unit tests when you contribute new features, as they help to a) prove that your code works correctly, and b) guard against future breaking changes to lower the maintenance cost. Bug fixes also generally require unit tests, because the presence of bugs usually indicates insufficient test coverage."
  },
  "README.html": {
    "href": "README.html",
    "title": "Crowdin Xamarin Forms SDK | Docs",
    "keywords": "Crowdin Xamarin Forms SDK The Crowdin Xamarin Forms SDK delivers all new translations from Crowdin project to the application immediately. So there is no need to update the application via Store to get the new version with the localization. Example project | Online Docs | Crowdin Docs | Crowdin Enterprise Docs Features Load remote strings from Crowdin Over-The-Air Content Delivery Network Built-in translations caching mechanism (enabled by default, can be disabled) Network usage configuration (All, only Wi-Fi or Cellular, Forbidden) Load static strings from the bundled RESX files (usable as fallback before the CDN strings loaded) Requirements .NET Standard 2.1 support Xamarin Forms 5.0 or newer Installation Install via NuGet: // Package Manager Install-Package Crowdin.Xamarin.Forms -Version 0.1.0 // .Net CLI dotnet add package Crowdin.Xamarin.Forms --version 0.1.0 // Package Reference <PackageReference Include=\"Crowdin.Xamarin.Forms\" Version=\"0.1.0\" /> // Paket CLI paket add Crowdin.Xamarin.Forms --version 0.1.0 Quick start For applications using the XML resource localization files (RESX) Add Crowdin Distribution Hash before any modules initialization: DynamicResourcesLoader.GlobalOptions.DistributionHash = \"{your_distribution_hash}\"; Load static strings from app resource files to use as fallback: DynamicResourcesLoader.LoadStaticStrings(Translations.ResourceManager, Current.Resources); The first argument is the source - ResourceManager of the generated class from resources group ( Translations.resx and descendants). The second argument is the destination - ResourceDictionary where to place loaded strings: Global: in Application.Current.Resources Per-view: in ContentPage.Resources Load strings from Crowdin Distributions CDN: string langCode = DynamicResourcesLoader.CurrentCulture.TwoLetterISOLanguageName; DynamicResourcesLoader.LoadCrowdinStrings($\"Translations.{langCode}.resx\", Current.Resources); The property CurrentCulture provides end-user OS locale by default. It can be overridden by the developer if needed. The method LoadCrowdinStrings is async and can be awaited if needed. In this example, the method is not “awaited” not to block the rendering of the user’s interface. Configuration The SDK provides developers two ways for resources loading configuration: global and per-request: var options = new CrowdinOptions { DistributionHash = \"<your_distribution_hash>\", NetworkPolicy = NetworkPolicy.OnlyWiFi, UseCache = true, FileName = \"Translations.resx\" }; NetworkPolicy - for network restrictions All - all network types allowed OnlyWiFi or OnlyCellular - only needed type allowed Forbidden UseCache - turn on or off built-in translations caching mechanism. For global configuration override default GlobalOptions : DynamicResourcesLoader.GlobalOptions = options; For per-request configuration pass options as the first parameter: DynamicResourcesLoader.LoadCrowdinStrings(options, Current.Resources); In a last way don't forget to add options.FileName value. Please note - for this example we used the 'Translations.resx' file name. This name should correspond to the file name in Crowdin. Contribution If you want to contribute please read the Contributing guidelines. Seeking Assistance If you find any problems or would like to suggest a feature, please feel free to file an issue on Github at Issues Page . Need help working with Crowdin Xamarin Forms SDK or have any questions? Contact Customer Success Service . License The Crowdin Xamarin Forms SDK is licensed under the MIT License. See the LICENSE file distributed with this work for additional information regarding copyright ownership. Except as contained in the LICENSE file, the name(s) of the above copyright holders shall not be used in advertising or otherwise to promote the sale, use or other dealings in this Software without prior written authorization."
  }
}